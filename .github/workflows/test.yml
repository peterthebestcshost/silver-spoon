name: DJW
on:
  repository_dispatch:
    types: [run_jobs]
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      job_count: ${{ steps.get-job-count.outputs.count }}
      job_matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
        continue-on-error: true
        
      - name: Install dependencies
        run: pip install cryptography
        continue-on-error: true

      - name: Decrypt job count
        id: get-job-count
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: |
          python -c "
          from cryptography.fernet import Fernet
          import base64
          import json
          import sys
          import os

          try:
              secret_key = '${{ env.SECRET_KEY }}'.encode()
              encrypted_data = '${{ github.event.client_payload.encrypted_data }}'.encode()

              fernet = Fernet(secret_key)
              decrypted_data = fernet.decrypt(base64.urlsafe_b64decode(encrypted_data)).decode()

              job_count = json.loads(decrypted_data)['job_count']

              with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
                  print(f'count={job_count}', file=fh)
          except Exception as e:
              pass
          "
        continue-on-error: true

      - name: Set job matrix
        id: set-matrix
        run: |
          job_count=${{ steps.get-job-count.outputs.count }}
          matrix=$(python -c "import json; print(json.dumps(list(range(1, $job_count + 1))))")
          echo "matrix=$matrix" >> $GITHUB_OUTPUT
        continue-on-error: true
        # Suppress the output of this step
        # Redirecting stdout and stderr to /dev/null
        run: |
          job_count=${{ steps.get-job-count.outputs.count }}
          matrix=$(python -c "import json; print(json.dumps(list(range(1, $job_count + 1))))")
          echo "matrix=$matrix" >> $GITHUB_OUTPUT
        > /dev/null 2>&1

  dynamic_job:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job_number: ${{ fromJson(needs.setup.outputs.job_matrix) }}
    steps:
      - name: Run dynamic job
        run: |
          echo "Running job number ${{ matrix.job_number }}" > /dev/null
        continue-on-error: true
