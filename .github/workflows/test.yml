name: DJW

on:
  repository_dispatch:
    types: [run_jobs]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      job_count: ${{ steps.get-job-count.outputs.count }}
      job_matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Specify the Python version

      - name: Install dependencies
        run: pip install cryptography

      - name: Decrypt job count
        id: get-job-count
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: |
          python -c "
          from cryptography.fernet import Fernet
          import base64
          import json
          import os

          # Decode the secret key and encrypted data
          secret_key = os.environ['SECRET_KEY'].encode()
          encrypted_data = os.environ['GITHUB_EVENT_CLIENT_PAYLOAD_ENCRYPTED_DATA'].encode()

          fernet = Fernet(secret_key)
          decrypted_data = fernet.decrypt(base64.urlsafe_b64decode(encrypted_data)).decode()
          job_count = json.loads(decrypted_data)['job_count']

          with open(os.environ['GITHUB_ENV'], 'a') as env_file:
              env_file.write(f'JOB_COUNT={job_count}\n')
          "

      - name: Set job matrix
        id: set-matrix
        run: |
          matrix=$(seq -s ',' 1 ${{ env.JOB_COUNT }} | sed 's/^/[/; s/$/]/')
          echo "JOB_MATRIX=$matrix" >> $GITHUB_ENV

  dynamic_job:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job_number: ${{ fromJson(env.JOB_MATRIX) }}
    steps:
      - name: Run dynamic job
        run: |
          echo "Running job number ${{ matrix.job_number }}"
          # Add your job logic here
